- 如果可以分给mid个孩子8美元，那么可能能分给更多孩子8灭元，将左边界扩大；否则将右边界缩小。
- 当mid指向"答案"的时候(不能分给更多小孩8美元了)，l = mid + 1(左边界继续扩大)，之后都不会满足，直到l == r，肯定也是不能分给这么多小孩8美元的，r = l - 1，退出循环，r指向了"答案"。

1. check()函数：首先先将money -= 8 * x，如果x < 0，那么肯定不满足
2. 如果money < 剩余没被分到钱的小孩，那么至少有一个小孩不能被分到一美元，不满足
3. 如果只有一个小孩没被分到钱，且剩下的钱恰好是4美元，不满足。(如果有两个小孩，剩下1，2，3，4，5，6，7美元，都有不分到4美元的方案，比如剩7美元，两个小孩没被分钱，可以分给其中一个小孩2美元，分给另一个小孩5美元)
4. 如果所有小孩都被分到8美元，钱还有剩，不满足

* java

```java
class Solution {
    public int distMoney(int money, int children) {
        int l = 0, r = children;
        while (l <= r) {
            int mid = (l + r) >> 1;
            if (check(mid, money, children))
                l = mid + 1;
            else
                r = mid - 1;
        }
        return r;
    }

    public boolean check(int x, int money, int children) {
        money -= x * 8;
        int left = children - x;
        if (money < 0 || money < left || (left == 1 && money == 4) || (left == 0 && money > 0))
            return false;
        return true;
    }
    
}
```

